/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package PresentationTier.Cliente;

import DataTier.Client.Client;
import DataTier.Client.Client;
import DataTier.Packs.Datapack;
import LogicTier.InGame.Players.Player;
import LogicTier.InGame.WaterElements.Submarine;
import java.awt.Color;
import java.awt.Point;
import javax.swing.JLabel;
import javax.swing.JSlider;
import javax.swing.JTextArea;

/**
 *
 * @author Jose
 */
public class PantallaBienvenidaCliente extends javax.swing.JFrame {

    Client cliente;
    static DataTier.Packs.Datapack datapack;
    Player player; 
    Submarine self; 
    
    
    
    /**
     * Creates new form PantallaBienvenida
     */
    public PantallaBienvenidaCliente() {
        
        self = new Submarine(10, 0, 0, 0, Color.yellow, 0.0, new Point (0,0)); 
        player = new Player(20, "Jugador"); /// Modicar la forma de iniciar un jugador
        datapack = new Datapack(self, player); 
        
        initComponents();
        cliente = new Client();
        try {
           cliente.conexion(datapack, this);
           
        }
        catch(Exception e){
            System.out.println("Error de conexion cliente ---");
        }
    }
    
    // Getter para manejo externo de monitores

    public JLabel getSpeed_monitorlabel() {
        return Speed_monitorlabel;
    }

    public JSlider getDepht_monitor() {
        return depht_monitor;
    }

    public JLabel getDepht_monitorlabel() {
        return depht_monitorlabel;
    }

    public JSlider getDirection_monitor() {
        return direction_monitor;
    }

    public JLabel getDirection_monitorlabel() {
        return direction_monitorlabel;
    }

    public radar getRadar() {
        return radar;
    }

    public JTextArea getjTextArea_monitor() {
        return jTextArea_monitor;
    }

    public JSlider getSpeed_monitor() {
        return speed_monitor;
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea_monitor = new javax.swing.JTextArea();
        direction_label = new javax.swing.JLabel();
        depht_controler = new javax.swing.JScrollBar();
        jLabel1 = new javax.swing.JLabel();
        speed_controler = new javax.swing.JScrollBar();
        jLabel2 = new javax.swing.JLabel();
        direction_controler = new javax.swing.JScrollBar();
        direction_monitor = new javax.swing.JSlider();
        speed_monitor = new javax.swing.JSlider();
        depht_monitor = new javax.swing.JSlider();
        direction_monitorlabel = new javax.swing.JLabel();
        Speed_monitorlabel = new javax.swing.JLabel();
        depht_monitorlabel = new javax.swing.JLabel();
        radar = new PresentationTier.Cliente.radar();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTextArea_monitor.setColumns(20);
        jTextArea_monitor.setRows(5);
        jScrollPane1.setViewportView(jTextArea_monitor);

        direction_label.setText("direction");

        depht_controler.addAdjustmentListener(new java.awt.event.AdjustmentListener() {
            public void adjustmentValueChanged(java.awt.event.AdjustmentEvent evt) {
                depht_controlerAdjustmentValueChanged(evt);
            }
        });

        jLabel1.setText("Depht");

        speed_controler.addAdjustmentListener(new java.awt.event.AdjustmentListener() {
            public void adjustmentValueChanged(java.awt.event.AdjustmentEvent evt) {
                speed_controlerAdjustmentValueChanged(evt);
            }
        });

        jLabel2.setText("Speed");

        direction_controler.setOrientation(javax.swing.JScrollBar.HORIZONTAL);
        direction_controler.addAdjustmentListener(new java.awt.event.AdjustmentListener() {
            public void adjustmentValueChanged(java.awt.event.AdjustmentEvent evt) {
                direction_controlerAdjustmentValueChanged(evt);
            }
        });

        speed_monitor.setOrientation(javax.swing.JSlider.VERTICAL);

        depht_monitor.setOrientation(javax.swing.JSlider.VERTICAL);

        direction_monitorlabel.setText("jLabel3");

        Speed_monitorlabel.setText("jLabel3");

        depht_monitorlabel.setText("jLabel3");

        javax.swing.GroupLayout radarLayout = new javax.swing.GroupLayout(radar);
        radar.setLayout(radarLayout);
        radarLayout.setHorizontalGroup(
            radarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        radarLayout.setVerticalGroup(
            radarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(16, 16, 16)
                                .addComponent(depht_monitor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(depht_controler, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(direction_monitor, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
                                    .addComponent(direction_controler, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(radar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(speed_controler, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(depht_monitorlabel)
                                .addGap(269, 269, 269)
                                .addComponent(jLabel2)
                                .addGap(2, 2, 2)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Speed_monitorlabel)
                            .addComponent(speed_monitor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(173, 173, 173)
                        .addComponent(direction_label)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(direction_monitorlabel))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 371, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(14, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1)
                    .addComponent(Speed_monitorlabel)
                    .addComponent(depht_monitorlabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(speed_monitor, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
                    .addComponent(radar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(speed_controler, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(depht_controler, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(depht_monitor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(direction_label)
                    .addComponent(direction_monitorlabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(direction_controler, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(direction_monitor, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(149, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void depht_controlerAdjustmentValueChanged(java.awt.event.AdjustmentEvent evt) {//GEN-FIRST:event_depht_controlerAdjustmentValueChanged
        int depht = depht_controler.getValue(); 
        datapack.self.control_depht = depht; 
    }//GEN-LAST:event_depht_controlerAdjustmentValueChanged

    private void speed_controlerAdjustmentValueChanged(java.awt.event.AdjustmentEvent evt) {//GEN-FIRST:event_speed_controlerAdjustmentValueChanged
        int speed = speed_controler.getValue(); 
        datapack.self.control_speed = speed; 
    }//GEN-LAST:event_speed_controlerAdjustmentValueChanged

    private void direction_controlerAdjustmentValueChanged(java.awt.event.AdjustmentEvent evt) {//GEN-FIRST:event_direction_controlerAdjustmentValueChanged
        int direction = direction_controler.getValue();
        datapack.self.control_direction =  direction; 
    }//GEN-LAST:event_direction_controlerAdjustmentValueChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PantallaBienvenidaCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PantallaBienvenidaCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PantallaBienvenidaCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PantallaBienvenidaCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PantallaBienvenidaCliente().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Speed_monitorlabel;
    private javax.swing.JScrollBar depht_controler;
    private javax.swing.JSlider depht_monitor;
    private javax.swing.JLabel depht_monitorlabel;
    private javax.swing.JScrollBar direction_controler;
    private javax.swing.JLabel direction_label;
    private javax.swing.JSlider direction_monitor;
    private javax.swing.JLabel direction_monitorlabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea_monitor;
    private PresentationTier.Cliente.radar radar;
    private javax.swing.JScrollBar speed_controler;
    private javax.swing.JSlider speed_monitor;
    // End of variables declaration//GEN-END:variables
}
